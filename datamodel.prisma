type User {
  id: ID! @id
  name: String! @unique
  email: String! @unique
  firstName:String
  lastName: String
  bio:String
  posts: [Post!] @relation ( name:"UserToPost", onDelete: CASCADE )
  likes: [Like!]! @relation ( name:"UserToLike", onDelete: CASCADE )
  comments: [Comment!]! @relation ( name:"UserToComment", onDelete: CASCADE )
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  chats: [Direct] 
  loginSecret: String
  avatar: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  files: [File!]! @relation ( name:"FileToPost", onDelete: CASCADE )
  location:String
  caption: String
  likes: [Like!]! @relation ( name:"LikeToPost", onDelete: CASCADE )
  comments: [Comment!]!  @relation ( name:"CommentToPost", onDelete: CASCADE )
  user:User @relation ( name:"UserToPost" )
 createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like{
  id: ID! @id
  user:User @relation ( name:"UserToLike" )
  post:Post @relation ( name:"LikeToPost" )
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text:String!
  user:User @relation ( name:"UserToComment" )
  post:Post @relation ( name:"CommentToPost" )
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File{
  id: ID! @id
  url: String!
  post: Post @relation ( name:"FileToPost" )
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Direct{
  id: ID! @id
  participants: [User!]!
  messagess: [Message]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message{
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  direct: [Direct!]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}